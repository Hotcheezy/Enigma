{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ob",
				"object2"
			],
			[
				"temp",
				"temp_fwhole"
			],
			[
				"denom",
				"denominator"
			],
			[
				"num",
				"numerator"
			],
			[
				"tra",
				"TransSpeed"
			],
			[
				"clie",
				"clientURLSize"
			],
			[
				"cle",
				"clientDelay"
			],
			[
				"client",
				"clientPriority"
			],
			[
				"size",
				"sizeInputs"
			],
			[
				"dela",
				"delayInputs"
			],
			[
				"init",
				"initialized"
			],
			[
				"turn",
				"turnover"
			],
			[
				"rotorType",
				"rotorTypePostition"
			],
			[
				"rotato",
				"rotatorText1_layer"
			],
			[
				"logo",
				"logo_layer"
			],
			[
				"lo",
				"logoWindow"
			],
			[
				"window",
				"window_layer"
			],
			[
				"wind",
				"window_layer"
			],
			[
				"layer",
				"layer_add_child"
			],
			[
				"log",
				"logo_bitmap"
			],
			[
				"tr",
				"TransSpeed"
			],
			[
				"total",
				"totalDelay"
			],
			[
				"si",
				"sizeOfURL"
			],
			[
				"counter",
				"counterCorrect"
			],
			[
				"nu",
				"numOfElements"
			],
			[
				"low",
				"lowerCase"
			],
			[
				"input",
				"inputMessage"
			],
			[
				"text_",
				"text_layer_set_text"
			],
			[
				"inpt",
				"inputMessage"
			],
			[
				"text",
				"text_layer_set_text"
			],
			[
				"intp",
				"inputMessage"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/peter/Dropbox/Courses/Programming ECE 105/Assignment9/ece150-10.cpp",
			"settings":
			{
				"buffer_size": 5453,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/peter/Dropbox/Courses/Programming ECE 105/Assignment9/ece150-10-provided.h",
			"settings":
			{
				"buffer_size": 1388,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Add Repository"
			],
			[
				"packag",
				"Package Control: Add Channel"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"add reposi",
				"Package Control: Add Repository"
			],
			[
				"corona ",
				"Package Control: Install Package"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/tmp/ece150-10.cpp",
		"/home/peter/Dropbox/ece150-10.cpp",
		"/home/peter/Desktop/startbootstrap-freelancer-1.0.3/index.html",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/savedSettings.h",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/savedSettings.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/plugboard.h",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/plugboard.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/rotatorSettings/rotatorType.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/Settings.h",
		"/home/peter/Desktop/ GitHub/Enigma/src/Enigma.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/Settings.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/rotatorSettings/rotatorType.h",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment9/ece150-10.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment9/ece150-10-provided.h",
		"/home/peter/Documents/GitHub/Enigma/src/Enigma.c",
		"/home/peter/Documents/GitHub/Enigma/src/settings/savedSettings.c",
		"/home/peter/Documents/GitHub/Enigma/src/settings/Settings.c",
		"/home/peter/Documents/GitHub/Enigma/src/settings/Settings.h",
		"/home/peter/Documents/GitHub/Enigma/src/settings/plugboard.c",
		"/home/peter/Documents/GitHub/Enigma/src/settings/plugboard.h",
		"/home/peter/Documents/GitHub/Enigma/src/settings/savedSettings.h",
		"/home/peter/Dropbox/Courses/Programming ECE 105/project2/ece150-proj2-stats.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/project2/ece150-proj2-helper.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/project2/ece150-proj2-stats.h",
		"/home/peter/Dropbox/Courses/Programming ECE 105/project1/ece150-proj1.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/project2/ece150-proj2-helper.h",
		"/home/peter/Dropbox/Courses/Programming ECE 105/project2/ece150-proj2-main.cpp",
		"/home/peter/Dropbox/ece150-proj2-stats.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment4/Min-max.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment4/Detect-sorted.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment7/Large-sum.cpp",
		"/home/peter/Dropbox/ece150-8-functions.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment8/ece150-8-functions.cpp",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/rotatorSettings/rotatorShift.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/Enigma.h",
		"/home/peter/Desktop/ GitHub/Enigma/src/settings/rotatorSettings/rotatorShift.h",
		"/home/peter/Desktop/ GitHub/Enigma/appinfo.json",
		"/home/peter/Documents/GitHub/Enigma/src/settings/rotatorSettings/rotatorShift.h",
		"/home/peter/Documents/GitHub/Enigma/src/settings/rotatorSettings/rotatorType.h",
		"/home/peter/Documents/GitHub/Enigma/src/settings/rotatorSettings/rotatorShift.c",
		"/home/peter/Desktop/enigmaStuff/sample enigma/sampleEnigma.c",
		"/home/peter/Desktop/actionmenu-multilevel-master/src/main.c",
		"/home/peter/Documents/GitHub/Enigma/src/settings/rotatorSettings/rotatorType.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/EnigmaAlgorithm.c",
		"/home/peter/Desktop/ GitHub/Enigma/src/EnigmaAlgorithm.h",
		"/home/peter/Documents/GitHub/Enigma/src/EnigmaAlgorithm.h",
		"/home/peter/Documents/GitHub/Enigma/src/EnigmaAlgorithm.c",
		"/home/peter/Documents/GitHub/Enigma/src/Enigma.h",
		"/home/peter/Desktop/feature-app-wakeup-master/src/tea_timer.c",
		"/home/peter/Desktop/enigmaStuff/ui-patterns-master/src/main.c",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment7/Sort-names.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment 7/Sort-names.cpp",
		"/home/peter/Desktop/ui-patterns-master/src/windows/list_message_window.h",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment3/Make-change.cpp",
		"/home/peter/Desktop/ui-patterns-master/src/windows/pin_window.c",
		"/home/peter/Desktop/ui-patterns-master/src/windows/pin_window.h",
		"/home/peter/Documents/GitHub/Enigma/src/layers/selection_layer.h",
		"/home/peter/Documents/GitHub/Enigma/src/layers/selection_layer.c",
		"/home/peter/Desktop/ui-patterns-master/src/layers/selection_layer.c",
		"/home/peter/Desktop/ui-patterns-master/src/layers/selection_layer.h",
		"/home/peter/Desktop/ui-patterns-master/src/main.c",
		"/home/peter/Desktop/gbitmap-sequence-example-master/src/gbitmap-sequence.c",
		"/home/peter/Desktop/enigmaStuff/ui-patterns-master/src/windows/pin_window.h",
		"/home/peter/Desktop/enigmaStuff/ui-patterns-master/src/windows/pin_window.c",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment5/Make-change-dp.cpp",
		"/home/peter/Desktop/sampleEnigma.c",
		"/home/peter/Documents/GitHub/Enigma/src/settings/rotatorSettings/rotatorSettings.h",
		"/home/peter/Documents/GitHub/Enigma/src/settings/rotatorSettings/rotatorSettings.c",
		"/home/peter/Documents/GitHub/Enigma/appinfo.json",
		"/home/peter/Documents/GitHub/Enigma/src/Settings.h",
		"/home/peter/Documents/GitHub/Enigma/src/enigma/machine.h",
		"/home/peter/Dropbox/Courses/Programming ECE 105/project1/fileio.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment4/Three-bit-parity.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment4/test.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment4/Three-bit-parity",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment4/Ascii-classification.cpp",
		"/home/peter/Dropbox/Courses/Programming ECE 105/Assignment3/Make-change",
		"/home/peter/Documents/GitHub/Enigma/.lock-waf_linux2_build",
		"/home/peter/Desktop/ GitHub/SnakeRobot/Arduino code/Snake/Snake.ino",
		"/home/peter/Documents/GitHub/IPCAM/app/src/main/java/com/robotclub/gy/ipcam/VideoStream.java"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"init_action_menu",
			"plugConnectLetters",
			"DISTANCE_BETWEEN_LETTER",
			"bounds",
			"NUM_WINDOWS_PLUG",
			"plug_layer",
			"plug_window",
			"rotorTypePostition",
			"reflector",
			"str_index",
			"rotor_notches",
			"str_index",
			"rotor_forward",
			"str_index",
			"strchr",
			"str_index",
			"character",
			"numrotors",
			"ABCDEFHIJKLMNOPQRSTUVWXYZ",
			";\n",
			"complete",
			"SelectionLayer",
			"SelectionLayerIncrementCallback",
			"NUM_CELLS",
			"pin_window_set_highlight_color",
			"selection_layer_create",
			"font",
			"pin_window_pop",
			"pin_window",
			"pin_window_pop",
			"status",
			"statusus",
			"status",
			"StatusBarLayer",
			"selection_handle_com",
			"font",
			"Select",
			"  // The input letter increments with each down clicks therefore a counter\n  textCounter++;\n  text_layer_set_text(input_text_layer, inputText[textCounter]);\n\n  // If the counter has reached the end \n  if(textCounter >= 26){\n    // Set the counter to A\n    textCounter = 0;\n    // Update the input text layer\n    text_layer_set_text(input_text_layer, inputText[textCounter]);\n  }",
			" ){"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/peter/Dropbox/Courses/Programming ECE 105/Assignment9/ece150-10.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5453,
						"regions":
						{
						},
						"selection":
						[
							[
								1871,
								1871
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/peter/Dropbox/Courses/Programming ECE 105/Assignment9/ece150-10-provided.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1388,
						"regions":
						{
						},
						"selection":
						[
							[
								635,
								635
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "enigma.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 192.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
